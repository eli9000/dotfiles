" Map the leader key to space
nnoremap <SPACE> <Nop>
let mapleader = ' '

" Allow backspacing over everything in insert mode
set backspace=indent,eol,start

syntax on

" dracula theme
packadd! dracula
let g:dracula_italic = 0 " TODO: Figure out why italics aren't working
colorscheme dracula

set autoindent
set smartindent
set shiftwidth=2 " number of spaces when shift indenting
set tabstop=2 " number of visual spaces per tab
set softtabstop=2 " number of spaces in tab when editing
set expandtab " tab to spaces
set relativenumber " show relative line numbers
set number " show current line number
set showmatch " highlight matching [{()}]
set incsearch " search as characters are entered
set hlsearch " highlight matches

set ruler
set showcmd
set noshowmode
set hidden

" clear search highlighting by hitting return
nnoremap <silent> <CR> :noh<CR><CR>

" Linting
let g:ale_fixers = {
      \   '*': ['remove_trailing_lines', 'trim_whitespace'],
      \   'javascript': ['prettier'],
      \   'javascriptreact': ['prettier'],
      \   'typescript': ['prettier'],
      \   'typescriptreact': ['prettier'],
      \   'css': ['prettier'],
      \   'scss': ['prettier'],
      \   'ruby': ['standardrb'],
      \}

let g:ale_linters = {
      \   'ruby': ['standardrb'],
      \   'typescript': ['tsserver'],
      \   'typescriptreact': ['tsserver'],
      \}
let g:ale_linters_explicit = 1
let g:ale_fix_on_save = 1
let g:ale_open_list = 0

" Tests
let test#strategy = "vimterminal"
nnoremap <leader>f :TestFile<CR>
nnoremap <leader>t :TestNearest<CR>
nnoremap <leader>A :TestSuite<CR>
nnoremap <leader>l :TestLast<CR>
